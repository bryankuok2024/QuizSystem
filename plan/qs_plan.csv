模块 (Module),功能点 (Feature),详细描述 (Detailed Description),当前状态 (Current Status),备注 (Notes)
项目基础,Django项目搭建,"标准Django项目结构, 配置文件分离（settings.py, local_settings.py - 如果采用）",已完成,核心配置已进行
项目基础,数据库配置,"使用MySQL作为数据库, 配置连接信息",进行中,".env 文件中已包含数据库连接变量 (DATABASE_USER, DATABASE_PASSWORD等), 但尚未在对话中确认数据库迁移和实际连接测试"
项目基础,依赖管理,"使用 requirements.txt 管理项目依赖",已完成,已更新至 django-allauth 0.62.0 等
项目基础,版本控制,"使用 Git 进行版本管理, 配置 .gitignore",已完成,已清理历史记录中的 .env 文件
项目基础,文档,"README, 配置说明等",进行中,"README 和 allauth 配置文档已更新, 其他模块文档待补充"
用户模块,邮箱注册登录,"用户可以使用邮箱和密码进行注册和登录",已完成,通过 django-allauth 实现
用户模块,Google OAuth登录,"用户可以使用Google账号进行注册和登录",已完成,通过 django-allauth 和 socialaccount 实现
用户模块,Apple OAuth登录,"用户可以使用Apple账号进行注册和登录",待开始,
题库核心功能,科目管理,"支持多科目, 如TOEFL, 阿里云, CCNA等",进行中,"数据模型和后台管理已完成 (questions app). 用户前端展示和选择逻辑待开发."
题库核心功能,题目录入与显示,"支持文本和图片类型的题目与答案",进行中,"数据模型和后台录入已完成 (questions app). 用户前端题目显示、练习交互逻辑待开发."
题库核心功能,练习模式,"用户选择科目进行顺序练习或随机练习",待开始,
题库核心功能,模拟考试,"用户选择科目进行模拟考试, 包含倒计时",待开始,需要实现考试逻辑和计时器功能
题库核心功能,错题练习,"系统记录用户错题, 用户可针对错题进行专项练习",待开始,
题库核心功能,题目购买,"用户需根据科目类型购买题库才能进行完整练习",待开始,需要集成支付流程和权限控制
题库核心功能,有限试玩,"提供部分题目或限时/限量试玩功能",待开始,
后台管理,管理员科目管理,"管理员可以新增、删除、修改科目",已完成,"通过 questions/admin.py 实现"
后台管理,管理员题库管理,"管理员可以新增、删除、修改题目和答案 (支持图文)",已完成,"通过 questions/admin.py 实现"
后台管理,Excel/CSV导入题目,"管理员可以通过Excel或CSV批量导入题目, 并进行去重处理",待开始,
后台管理,用户管理,"管理员可以查看用户列表、用量、使用情况, 禁用/启用用户",待开始,
AI集成,AI生成题目,"集成ChatGPT, DeepSeek API根据科目内容生成新题目和答案",待开始,
AI集成,AI题目标注,"AI生成的题目在前端应有明确标注",待开始,
用户体验,用户进度追踪,"记录用户完成题目数、模拟考试分数, 提供学习报告",待开始,需要设计 UserProgress 模型
用户体验,题目反馈系统,"用户可对题目进行错误报告或提出建议, 管理员可查看处理",待开始,需要设计 QuestionFeedback 模型
用户体验,题目搜索与过滤,"用户可按关键词、难度、题型搜索题目",待开始,可使用 django-filter
用户体验,排行榜与激励,"提供模拟考试排行榜 (可使用Redis缓存)",待开始,
用户体验,题目书签,"用户可以收藏重要题目",待开始,
用户体验,移动端适配,"使用Bootstrap或Tailwind CSS确保界面响应式",待开始,
安全与权限,角色权限管理,"使用Django Group和Permission管理普通用户和管理员角色",进行中,"django-allauth本身有用户概念, 需进一步配置Group/Permission"
安全与权限,安全防护,"防止SQL注入、XSS攻击等",进行中,"Django框架自身提供部分防护, 需持续关注安全实践"
支付模块,静态二维码支付,"支持MPay、中银静态二维码收款",待开始,
支付模块,付款确认流程,"用户付款后点击"已付款"按钮, 系统发送邮件通知管理员核实并手动开通账户",待开始,需要邮件发送功能和后台订单管理初步逻辑 